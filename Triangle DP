class Solution {
public:
    int f(int i,int j,vector<vector<int>> &triangle,vector<vector<int>> &dp,int m,int n)
    {
        if(i == m-1)
            return triangle[m-1][j];
        if(dp[i][j]!=-1) return dp[i][j];
        int down = triangle[i][j] + f(i+1,j,triangle,dp,m,n);
        // int leftdiag = triangle[i][j] + f(i-1,j+1,triangle,dp);
        int rightdiag = triangle[i][j] + f(i+1,j+1,triangle,dp,m,n);
        return dp[i][j] = min(down,rightdiag);
    }
    int minimumTotal(vector<vector<int>>& triangle) {
        int m = triangle.size();
        int n = triangle[m-1].size();
        vector<vector<int>> dp(m,vector<int>(n,-1));
        return f(0,0,triangle,dp,m,n);
    }
};
