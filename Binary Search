class Solution {
public:
    int search(vector<int>& nums, int target) 
    {
        int s = 0;
        int n = nums.size();
        int e = n - 1;
        int mid = s+(e-s)/2;
        while(s<=e)
        {
            if(nums[mid] == target)
            return mid;
            else if(target > nums[mid])
            s = mid + 1;
            else
            e = mid-1;
            mid = s+(e-s)/2;
        }
        return -1;
        
    }
};

class Solution {
public:
    int binary_search(vector<int> &arr,int s,int e,int target)
    {
        if(s>e)
        return -1;
        int mid = s+(e-s)/2;
        if(arr[mid] == target)
        return mid;
        else if(target>arr[mid])
        return binary_search(arr,mid+1,e,target);
        else
        return binary_search(arr,s,mid-1,target);
    }
    int search(vector<int>& nums, int target) 
    {
        int s = 0;
        int e = nums.size()-1;
        return binary_search(nums,s,e,target);
        
    }
};
