/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) 
    {
        if(k==0)
        return head;
        if(head == NULL || head->next == NULL)
        return head;
        ListNode* slow = head;
        ListNode* fast = head;
        int cnt = 0;
        while(slow!=NULL)
        {
            cnt++;
            slow = slow->next;
        }

        slow = head;
        k = k%cnt;
        if(k==0)
        return head;
        while(k!=0)
        {
            fast = fast->next;
            k--;
        }
        // if(k == 0)
        // return head;        
        while(fast->next!=NULL)
        {
            slow = slow->next;
            fast = fast->next;
        }
        ListNode* temp = slow->next;
        slow->next = NULL;
        fast->next = head;
        head = temp;
        slow->next = NULL;
        return head;
    }
};
