/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool Symm(TreeNode* left,TreeNode* right)
    {
        if(left == NULL || right == NULL)
        return left == right;
        if(left->val!=right->val)
        return false;
        bool lstree = Symm(left->left,right->right);
        bool rstree = Symm(left->right,right->left);
        return lstree && rstree;
    }
    bool isSymmetric(TreeNode* root) 
    {
        if(root == NULL)
        return false;
        TreeNode* lefttree = root->left;
        TreeNode* righttree = root->right;
        if(Symm(lefttree,righttree))
        return true;
        return false;
        
    }
};
