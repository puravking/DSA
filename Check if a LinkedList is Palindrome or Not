/****************************************************************

    Following is the class structure of the Node class:

    class Node
    {
    public:
        int data;
        Node *next;
        Node()
        {
            this->data = 0;
            next = NULL;
        }
        Node(int data)
        {
            this->data = data;
            this->next = NULL;
        }
        Node(int data, Node* next)
        {
            this->data = data;
            this->next = next;
        }
    };

*****************************************************************/
Node* reverse(Node* head)
{
    if(head == NULL || head->next == NULL)
    return head;
    Node* newHead = reverse(head->next);
    Node* front = head -> next;
    front->next = head;
    head->next = NULL;
    return newHead;
}
bool isPalindrome(Node *head)
{
    // write your code here
    if(head == NULL || head->next == NULL)
    return true;
    Node* slow = head;
    Node* fast = head->next;
    while(fast->next!=NULL)
    {
        slow = slow ->next;
        fast = fast ->next;
        if(fast->next!= NULL)
        fast = fast -> next;
    }
    Node* head2 = reverse(slow->next);
    Node* temp = head;
    while(head2 != NULL)
    {
        if(temp -> data != head2-> data)
        {
            slow->next = reverse(slow->next);
            return false;
        }
        
        temp = temp -> next;
        head2 = head2->next;
    }
    slow->next = reverse(slow->next);
    return true;




}
