class Solution {
public:
    int findSpecialInteger(vector<int>& arr) {
        unordered_map<double,double> mpp;
        for(int i = 0;i<arr.size();i++)
        {
            mpp[arr[i]]++;
        }
        int target = arr.size()/4;
            
        int c = 0;
        for(auto &i : mpp)
        {
            if(i.second>target)
            {
                c = i.first;
                break;
            }
        }
        return c;
        
    }
};
// class Solution {
// public:
//     int findSpecialInteger(vector<int>& arr) {
//         unordered_map<int,int> mpp;
//         for(int i = 0; i < arr.size(); i++) {
//             mpp[arr[i]]++;
//         }

//         int target = arr.size() / 4;  
//         for(auto it = mpp.begin(); it != mpp.end(); ++it) {
//             if(it->second > target) {
//                 return it->first;  
//             }
//         }

//         return -1;
//     }
// };
