class Solution {
public:
    int climbStairs(int n,vector<int> &dp,vector<int> &cost)
    {
        if(n == 0 || n==1) return cost[n];
        if(dp[n]!=-1) return dp[n];
        int l = climbStairs(n-1,dp,cost) + cost[n];
        int r = climbStairs(n-2,dp,cost) + cost[n];
        return dp[n] = min(l,r);
    }
    int minCostClimbingStairs(vector<int>& cost) {
        int n = cost.size();
        vector<int> dp(n+1,-1);
        return min(climbStairs(cost.size()-1,dp,cost),climbStairs(n-2,dp,cost));
    }
};
