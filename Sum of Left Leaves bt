// /**
//  * Definition for a binary tree node.
//  * struct TreeNode {
//  *     int val;
//  *     TreeNode *left;
//  *     TreeNode *right;
//  *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
//  *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
//  *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
//  * };
//  */
// class Solution {
// public:
//     bool isLeaf(TreeNode* root)
//     {
//         if(root->left == NULL && root->right == NULL)
//         return true;
//         return false;
//     }
//     void leftleafsum(TreeNode* root,int &sum)
//     {
//         if(root == nullptr) return;
//         if(root->left == NULL || root->right == NULL)
//         return;
//         if(isLeaf(root->left))
//         sum+=root->left->val;
//         leftleafsum(root->left,sum);
//         leftleafsum(root->right,sum);
//     }
//     int sumOfLeftLeaves(TreeNode* root) 
//     {
//         int sum = 0;
//         if(root == NULL)
//         return 0;
//         leftleafsum(root,sum);
//         return sum;
//     }
// };
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isLeaf(TreeNode* root) {
        return (root != nullptr && root->left == nullptr && root->right == nullptr);
    }

    int sumOfLeftLeaves(TreeNode* root) {
        if (root == nullptr) return 0;

        int sum = 0;

        if (root->left != nullptr && isLeaf(root->left)) {
            sum += root->left->val;
        }

        sum += sumOfLeftLeaves(root->left);
        sum += sumOfLeftLeaves(root->right);

        return sum;
    }
};
